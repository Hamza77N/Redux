{"ast":null,"code":"import { createSlice, configureStore } from '@reduxjs/toolkit';\nconst initialState = {\n  counter: 0,\n  showCounter: true\n};\nconst counterSlice = createSlice({\n  name: 'counter',\n  initialState,\n  reducers: {\n    increment: state => {\n      state.counter++;\n    },\n    decrement: state => {\n      state.counter--;\n    },\n    increase: (state, action) => {\n      state.counter = state.counter + action.amount;\n    },\n    toggleCounter: state => {\n      state.showCounter = !state.showCounter;\n    }\n  }\n});\ncounterSlice = ac;\n\n// CENTER STORE DATA (STATE) We PASS THE REDUCER FUNC TO PARAMETER\n\nconst store = configureStore({\n  //passing the slice to our root reducer function\n  reducer: counterSlice.reducer\n});\nexport default store;\n\n//SUBSCRIPTION FUNCTION TO PASS DATA \n// const counterSubscriber = () => {\n//    const latestState = store.getState()\n//    console.log(latestState)\n// }\n\n// store.subscribe(counterSubscriber)\n\n// store.dispatch({ type: 'increment' }) \n// store.dispatch({ type: 'decrement' }) \n\n// REDUCER FUNC FOR CHANGING AND UPDATE DATA\n// const counterReducer = (state = initialState, action) => {\n//    if (action.type === 'increment') {\n//       return {\n//          counter: state.counter + 1,\n//          showCounter: state.showCounter\n//       };\n//    }\n\n//    if (action.type === 'increase') {\n//       return {\n//          counter: state.counter + action.amount,\n//          showCounter: state.showCounter\n\n//       }\n//    }\n\n//    if (action.type === 'decrement') {\n//       return {\n//          counter: state.counter - 1,\n//          showCounter: state.showCounter\n//       }\n//    }\n//    if (action.type === 'toggle') {\n//       return {\n//          showCounter: !state.showCounter,\n//          counter: state.counter\n//       }\n//    }\n//    return state\n// };","map":{"version":3,"names":["createSlice","configureStore","initialState","counter","showCounter","counterSlice","name","reducers","increment","state","decrement","increase","action","amount","toggleCounter","ac","store","reducer"],"sources":["/Users/macbook2022/Desktop/01-starting-project/src/store/index.js"],"sourcesContent":["import { createSlice , configureStore } from '@reduxjs/toolkit';\n\n\nconst initialState = { counter: 0, showCounter: true }\nconst counterSlice = createSlice({\n   name: 'counter',\n   initialState,\n   reducers: {\n      increment: (state) => {\n         state.counter++;\n      },\n      decrement: (state) => {\n         state.counter--\n      },\n      increase: (state, action) => {\n         state.counter = state.counter + action.amount\n      },\n      toggleCounter: (state) => {\n         state.showCounter = !state.showCounter\n      },\n   }\n})\n\ncounterSlice = ac\n\n// CENTER STORE DATA (STATE) We PASS THE REDUCER FUNC TO PARAMETER\n\nconst store = configureStore({\n   //passing the slice to our root reducer function\n   reducer: counterSlice.reducer\n\n})\n\nexport default store;\n\n\n//SUBSCRIPTION FUNCTION TO PASS DATA \n// const counterSubscriber = () => {\n//    const latestState = store.getState()\n//    console.log(latestState)\n// }\n\n\n// store.subscribe(counterSubscriber)\n\n// store.dispatch({ type: 'increment' }) \n// store.dispatch({ type: 'decrement' }) \n\n\n\n// REDUCER FUNC FOR CHANGING AND UPDATE DATA\n// const counterReducer = (state = initialState, action) => {\n//    if (action.type === 'increment') {\n//       return {\n//          counter: state.counter + 1,\n//          showCounter: state.showCounter\n//       };\n//    }\n\n//    if (action.type === 'increase') {\n//       return {\n//          counter: state.counter + action.amount,\n//          showCounter: state.showCounter\n\n//       }\n//    }\n\n//    if (action.type === 'decrement') {\n//       return {\n//          counter: state.counter - 1,\n//          showCounter: state.showCounter\n//       }\n//    }\n//    if (action.type === 'toggle') {\n//       return {\n//          showCounter: !state.showCounter,\n//          counter: state.counter\n//       }\n//    }\n//    return state\n// };\n"],"mappings":"AAAA,SAASA,WAAW,EAAGC,cAAc,QAAQ,kBAAkB;AAG/D,MAAMC,YAAY,GAAG;EAAEC,OAAO,EAAE,CAAC;EAAEC,WAAW,EAAE;AAAK,CAAC;AACtD,MAAMC,YAAY,GAAGL,WAAW,CAAC;EAC9BM,IAAI,EAAE,SAAS;EACfJ,YAAY;EACZK,QAAQ,EAAE;IACPC,SAAS,EAAGC,KAAK,IAAK;MACnBA,KAAK,CAACN,OAAO,EAAE;IAClB,CAAC;IACDO,SAAS,EAAGD,KAAK,IAAK;MACnBA,KAAK,CAACN,OAAO,EAAE;IAClB,CAAC;IACDQ,QAAQ,EAAEA,CAACF,KAAK,EAAEG,MAAM,KAAK;MAC1BH,KAAK,CAACN,OAAO,GAAGM,KAAK,CAACN,OAAO,GAAGS,MAAM,CAACC,MAAM;IAChD,CAAC;IACDC,aAAa,EAAGL,KAAK,IAAK;MACvBA,KAAK,CAACL,WAAW,GAAG,CAACK,KAAK,CAACL,WAAW;IACzC;EACH;AACH,CAAC,CAAC;AAEFC,YAAY,GAAGU,EAAE;;AAEjB;;AAEA,MAAMC,KAAK,GAAGf,cAAc,CAAC;EAC1B;EACAgB,OAAO,EAAEZ,YAAY,CAACY;AAEzB,CAAC,CAAC;AAEF,eAAeD,KAAK;;AAGpB;AACA;AACA;AACA;AACA;;AAGA;;AAEA;AACA;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}