{"ast":null,"code":"import { legacy_createStore as createStore } from 'redux';\nimport { createSlice } from '@reduxjs/toolkit';\nconst initialState = {\n  counter: 0,\n  showCounter: true\n};\ncreateSlice({\n  name: 'counter',\n  initialState,\n  reducers: {\n    increment: state => ({\n      ...state,\n      counter: state.counter + 1\n    }),\n    decrement: state => ({\n      ...state,\n      counter: state.counter + 1\n    }),\n    toggle: state => ({\n      ...state,\n      counter: state.counter + 1\n    })\n  }\n});\n// REDUCER FUNC FOR CHANGING AND UPDATE DATA\nconst counterReducer = (state = initialState, action) => {\n  if (action.type === 'increment') {\n    return {\n      counter: state.counter + 1,\n      showCounter: state.showCounter\n    };\n  }\n  if (action.type === 'increase') {\n    return {\n      counter: state.counter + action.amount,\n      showCounter: state.showCounter\n    };\n  }\n  if (action.type === 'decrement') {\n    return {\n      counter: state.counter - 1,\n      showCounter: state.showCounter\n    };\n  }\n  if (action.type === 'toggle') {\n    return {\n      showCounter: !state.showCounter,\n      counter: state.counter\n    };\n  }\n  return state;\n};\n\n// CENTER STORE DATA (STATE) We PASS THE REDUCER FUNC TO PARAMETER\nconst store = createStore(counterReducer);\n// console.log(store.getState());\nexport default store;\n\n//SUBSCRIPTION FUNCTION TO PASS DATA \n// const counterSubscriber = () => {\n//    const latestState = store.getState()\n//    console.log(latestState)\n// }\n\n// store.subscribe(counterSubscriber)\n\n// store.dispatch({ type: 'increment' }) \n// store.dispatch({ type: 'decrement' })","map":{"version":3,"names":["legacy_createStore","createStore","createSlice","initialState","counter","showCounter","name","reducers","increment","state","decrement","toggle","counterReducer","action","type","amount","store"],"sources":["/Users/macbook2022/Desktop/01-starting-project/src/store/index.js"],"sourcesContent":["import { legacy_createStore as createStore, } from 'redux'\nimport { createSlice } from '@reduxjs/toolkit';\n\n\n\n\nconst initialState = { counter: 0, showCounter: true }\ncreateSlice({\n   name :'counter',\n   initialState,\n   reducers: {\n      increment:(state)=> ({...state, counter: state.counter+1}),\n      decrement:(state)=> ({...state, counter: state.counter+1}),\n      toggle:(state)=> ({...state, counter: state.counter+1}),\n   \n   }\n\n})\n// REDUCER FUNC FOR CHANGING AND UPDATE DATA\nconst counterReducer = (state = initialState, action) => {\n   if (action.type === 'increment') {\n      return {\n         counter: state.counter + 1,\n         showCounter: state.showCounter\n      };\n   }\n\n   if (action.type === 'increase') {\n      return {\n         counter: state.counter + action.amount,\n         showCounter: state.showCounter\n\n      }\n   }\n\n   if (action.type === 'decrement') {\n      return {\n         counter: state.counter - 1,\n         showCounter: state.showCounter\n      }\n   }\n   if (action.type === 'toggle') {\n      return {\n         showCounter: !state.showCounter,\n         counter: state.counter\n      }\n   }\n   return state\n};\n\n\n// CENTER STORE DATA (STATE) We PASS THE REDUCER FUNC TO PARAMETER\nconst store = createStore(counterReducer)\n// console.log(store.getState());\nexport default store;\n\n\n//SUBSCRIPTION FUNCTION TO PASS DATA \n// const counterSubscriber = () => {\n//    const latestState = store.getState()\n//    console.log(latestState)\n// }\n\n\n// store.subscribe(counterSubscriber)\n\n// store.dispatch({ type: 'increment' }) \n// store.dispatch({ type: 'decrement' }) "],"mappings":"AAAA,SAASA,kBAAkB,IAAIC,WAAW,QAAS,OAAO;AAC1D,SAASC,WAAW,QAAQ,kBAAkB;AAK9C,MAAMC,YAAY,GAAG;EAAEC,OAAO,EAAE,CAAC;EAAEC,WAAW,EAAE;AAAK,CAAC;AACtDH,WAAW,CAAC;EACTI,IAAI,EAAE,SAAS;EACfH,YAAY;EACZI,QAAQ,EAAE;IACPC,SAAS,EAAEC,KAAK,KAAK;MAAC,GAAGA,KAAK;MAAEL,OAAO,EAAEK,KAAK,CAACL,OAAO,GAAC;IAAC,CAAC,CAAC;IAC1DM,SAAS,EAAED,KAAK,KAAK;MAAC,GAAGA,KAAK;MAAEL,OAAO,EAAEK,KAAK,CAACL,OAAO,GAAC;IAAC,CAAC,CAAC;IAC1DO,MAAM,EAAEF,KAAK,KAAK;MAAC,GAAGA,KAAK;MAAEL,OAAO,EAAEK,KAAK,CAACL,OAAO,GAAC;IAAC,CAAC;EAEzD;AAEH,CAAC,CAAC;AACF;AACA,MAAMQ,cAAc,GAAGA,CAACH,KAAK,GAAGN,YAAY,EAAEU,MAAM,KAAK;EACtD,IAAIA,MAAM,CAACC,IAAI,KAAK,WAAW,EAAE;IAC9B,OAAO;MACJV,OAAO,EAAEK,KAAK,CAACL,OAAO,GAAG,CAAC;MAC1BC,WAAW,EAAEI,KAAK,CAACJ;IACtB,CAAC;EACJ;EAEA,IAAIQ,MAAM,CAACC,IAAI,KAAK,UAAU,EAAE;IAC7B,OAAO;MACJV,OAAO,EAAEK,KAAK,CAACL,OAAO,GAAGS,MAAM,CAACE,MAAM;MACtCV,WAAW,EAAEI,KAAK,CAACJ;IAEtB,CAAC;EACJ;EAEA,IAAIQ,MAAM,CAACC,IAAI,KAAK,WAAW,EAAE;IAC9B,OAAO;MACJV,OAAO,EAAEK,KAAK,CAACL,OAAO,GAAG,CAAC;MAC1BC,WAAW,EAAEI,KAAK,CAACJ;IACtB,CAAC;EACJ;EACA,IAAIQ,MAAM,CAACC,IAAI,KAAK,QAAQ,EAAE;IAC3B,OAAO;MACJT,WAAW,EAAE,CAACI,KAAK,CAACJ,WAAW;MAC/BD,OAAO,EAAEK,KAAK,CAACL;IAClB,CAAC;EACJ;EACA,OAAOK,KAAK;AACf,CAAC;;AAGD;AACA,MAAMO,KAAK,GAAGf,WAAW,CAACW,cAAc,CAAC;AACzC;AACA,eAAeI,KAAK;;AAGpB;AACA;AACA;AACA;AACA;;AAGA;;AAEA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}