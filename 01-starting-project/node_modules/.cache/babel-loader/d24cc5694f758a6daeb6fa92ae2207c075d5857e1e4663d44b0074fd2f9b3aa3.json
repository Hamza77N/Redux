{"ast":null,"code":"import { legacy_createStore as createStore } from 'redux';\nimport { createSlice } from '@reduxjs/toolkit';\nconst initialState = {\n  counter: 0,\n  showCounter: true\n};\nconst counterSlice = createSlice({\n  name: 'counter',\n  initialState,\n  reducers: {\n    increment: state => {\n      state.counter++;\n    },\n    decrement: state => {\n      state.counter--;\n    },\n    increase: (state, action) => {\n      state.counter = state.counter + action.amount;\n    },\n    toggleCounter: state => {\n      state.showCounter = !state.showCounter;\n    }\n  }\n});\n// REDUCER FUNC FOR CHANGING AND UPDATE DATA\nconst counterReducer = (state = initialState, action) => {\n  if (action.type === 'increment') {\n    return {\n      counter: state.counter + 1,\n      showCounter: state.showCounter\n    };\n  }\n  if (action.type === 'increase') {\n    return {\n      counter: state.counter + action.amount,\n      showCounter: state.showCounter\n    };\n  }\n  if (action.type === 'decrement') {\n    return {\n      counter: state.counter - 1,\n      showCounter: state.showCounter\n    };\n  }\n  if (action.type === 'toggle') {\n    return {\n      showCounter: !state.showCounter,\n      counter: state.counter\n    };\n  }\n  return state;\n};\n\n// CENTER STORE DATA (STATE) We PASS THE REDUCER FUNC TO PARAMETER\nconst store = createStore(counterReducer);\n// console.log(store.getState());\nexport default store;\n\n//SUBSCRIPTION FUNCTION TO PASS DATA \n// const counterSubscriber = () => {\n//    const latestState = store.getState()\n//    console.log(latestState)\n// }\n\n// store.subscribe(counterSubscriber)\n\n// store.dispatch({ type: 'increment' }) \n// store.dispatch({ type: 'decrement' })","map":{"version":3,"names":["legacy_createStore","createStore","createSlice","initialState","counter","showCounter","counterSlice","name","reducers","increment","state","decrement","increase","action","amount","toggleCounter","counterReducer","type","store"],"sources":["/Users/macbook2022/Desktop/01-starting-project/src/store/index.js"],"sourcesContent":["import { legacy_createStore as createStore, } from 'redux'\nimport { createSlice } from '@reduxjs/toolkit';\n\n\n\n\nconst initialState = { counter: 0, showCounter: true }\nconst counterSlice = createSlice({\n   name: 'counter',\n   initialState,\n   reducers: {\n      increment: (state) => {\n         state.counter++;\n      },\n      decrement: (state) => {\n         state.counter--\n      },\n      increase: (state, action) => {\n         state.counter = state.counter + action.amount\n      },\n      toggleCounter: (state) => {\n         state.showCounter = !state.showCounter\n      },\n\n   }\n\n})\n// REDUCER FUNC FOR CHANGING AND UPDATE DATA\nconst counterReducer = (state = initialState, action) => {\n   if (action.type === 'increment') {\n      return {\n         counter: state.counter + 1,\n         showCounter: state.showCounter\n      };\n   }\n\n   if (action.type === 'increase') {\n      return {\n         counter: state.counter + action.amount,\n         showCounter: state.showCounter\n\n      }\n   }\n\n   if (action.type === 'decrement') {\n      return {\n         counter: state.counter - 1,\n         showCounter: state.showCounter\n      }\n   }\n   if (action.type === 'toggle') {\n      return {\n         showCounter: !state.showCounter,\n         counter: state.counter\n      }\n   }\n   return state\n};\n\n\n// CENTER STORE DATA (STATE) We PASS THE REDUCER FUNC TO PARAMETER\nconst store = createStore(counterReducer)\n// console.log(store.getState());\nexport default store;\n\n\n//SUBSCRIPTION FUNCTION TO PASS DATA \n// const counterSubscriber = () => {\n//    const latestState = store.getState()\n//    console.log(latestState)\n// }\n\n\n// store.subscribe(counterSubscriber)\n\n// store.dispatch({ type: 'increment' }) \n// store.dispatch({ type: 'decrement' }) "],"mappings":"AAAA,SAASA,kBAAkB,IAAIC,WAAW,QAAS,OAAO;AAC1D,SAASC,WAAW,QAAQ,kBAAkB;AAK9C,MAAMC,YAAY,GAAG;EAAEC,OAAO,EAAE,CAAC;EAAEC,WAAW,EAAE;AAAK,CAAC;AACtD,MAAMC,YAAY,GAAGJ,WAAW,CAAC;EAC9BK,IAAI,EAAE,SAAS;EACfJ,YAAY;EACZK,QAAQ,EAAE;IACPC,SAAS,EAAGC,KAAK,IAAK;MACnBA,KAAK,CAACN,OAAO,EAAE;IAClB,CAAC;IACDO,SAAS,EAAGD,KAAK,IAAK;MACnBA,KAAK,CAACN,OAAO,EAAE;IAClB,CAAC;IACDQ,QAAQ,EAAEA,CAACF,KAAK,EAAEG,MAAM,KAAK;MAC1BH,KAAK,CAACN,OAAO,GAAGM,KAAK,CAACN,OAAO,GAAGS,MAAM,CAACC,MAAM;IAChD,CAAC;IACDC,aAAa,EAAGL,KAAK,IAAK;MACvBA,KAAK,CAACL,WAAW,GAAG,CAACK,KAAK,CAACL,WAAW;IACzC;EAEH;AAEH,CAAC,CAAC;AACF;AACA,MAAMW,cAAc,GAAGA,CAACN,KAAK,GAAGP,YAAY,EAAEU,MAAM,KAAK;EACtD,IAAIA,MAAM,CAACI,IAAI,KAAK,WAAW,EAAE;IAC9B,OAAO;MACJb,OAAO,EAAEM,KAAK,CAACN,OAAO,GAAG,CAAC;MAC1BC,WAAW,EAAEK,KAAK,CAACL;IACtB,CAAC;EACJ;EAEA,IAAIQ,MAAM,CAACI,IAAI,KAAK,UAAU,EAAE;IAC7B,OAAO;MACJb,OAAO,EAAEM,KAAK,CAACN,OAAO,GAAGS,MAAM,CAACC,MAAM;MACtCT,WAAW,EAAEK,KAAK,CAACL;IAEtB,CAAC;EACJ;EAEA,IAAIQ,MAAM,CAACI,IAAI,KAAK,WAAW,EAAE;IAC9B,OAAO;MACJb,OAAO,EAAEM,KAAK,CAACN,OAAO,GAAG,CAAC;MAC1BC,WAAW,EAAEK,KAAK,CAACL;IACtB,CAAC;EACJ;EACA,IAAIQ,MAAM,CAACI,IAAI,KAAK,QAAQ,EAAE;IAC3B,OAAO;MACJZ,WAAW,EAAE,CAACK,KAAK,CAACL,WAAW;MAC/BD,OAAO,EAAEM,KAAK,CAACN;IAClB,CAAC;EACJ;EACA,OAAOM,KAAK;AACf,CAAC;;AAGD;AACA,MAAMQ,KAAK,GAAGjB,WAAW,CAACe,cAAc,CAAC;AACzC;AACA,eAAeE,KAAK;;AAGpB;AACA;AACA;AACA;AACA;;AAGA;;AAEA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}